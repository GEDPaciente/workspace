name: 'üéõÔ∏è Build Modulo'
description: 'Fluxo de atualiza√ß√£o do Modulo'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  module_version:
    description: 'Vers√£o do Modulo'
    value: ${{ steps.get_version.outputs.version }}

runs:
  using: 'composite'
  steps:
    - name: üîí Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token n√£o fornecido."
          exit 1
        else
          echo "GitHub Token est√° presente."
        fi
      shell: bash

    - name: 'Checkout Reposit√≥rio Parent'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        repository: GEDPaciente/mv-ged-parent
        token: ${{ inputs.github_token }}
        path: parent

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'
    - name: 'Obter o nome do reposit√≥rio que disparou a a√ß√£o'
      run: |
        REPO_NAME=$(basename "${{ github.repository }}")
        echo "O nome do reposit√≥rio que disparou a action √©: $REPO_NAME"
        echo "repo_name=$REPO_NAME" >> $GITHUB_ENV
      shell: bash

    - name: Build do Parent, Cores e Subm√≥dulo Espec√≠fico
      id: build-only-modules
      run: |
        cd parent
        if [[ ! "$GITHUB_REPOSITORY" == "GEDPaciente/mv-ged-core" && ! "$GITHUB_REPOSITORY" == "GEDPaciente/mv-gap-core" ]]; then
          echo "Buildando cores e ${{env.repo_name}}"
          mvn clean package -pl mv-ged-core,mv-gap-core,${{ env.repo_name }} -am -DskipTests -q
        else
            if [[ "$GITHUB_REPOSITORY" == "GEDPaciente/mv-ged-core" ]]; then
              echo "Buildando somente GED-CORE"
              mvn clean package -pl mv-ged-core -DskipTests -q
            elif [[ "$GITHUB_REPOSITORY" == "GEDPaciente/mv-gap-core" ]]; then
              echo "Buildando somente GAP-CORE"
              mvn clean package -pl mv-gap-core -DskipTests -q
            fi
        fi

        echo "Build COMPLETO! ${{ env.repo_name }}"
        
      shell: bash

    - name: 'Copiar Arquivos'
      run: |
        
        mkdir -p core/target
        
        if [[ -d "parent/mv-ged-core/target" ]]; then
          cp parent/mv-ged-core/target/*.jar core/target/
          echo "JAR GED-CORE copiado para core/target"
        fi

        if [[ -d "parent/mv-gap-core/target" ]]; then        
          cp parent/mv-gap-core/target/*.jar core/target/
          echo "JAR GAP-CORE copiado para core/target"
        fi        

        ln -s "parent/${{ env.repo_name }}" module
        echo "Symlink criado para a pasta do reposit√≥rio em 'module'"
      shell: bash

    